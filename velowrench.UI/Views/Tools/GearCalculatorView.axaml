<UserControl x:Class="velowrench.UI.Views.Tools.GearCalculatorView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:calculatorEnums="using:velowrench.Calculations.Enums"
             xmlns:converters="clr-namespace:velowrench.UI.Converters"
             xmlns:enums="using:velowrench.Utils.Enums"
             xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:res="clr-namespace:velowrench.UI.Resources"
             xmlns:vm="using:velowrench.Core.ViewModels"
             x:DataType="vm:Tools.GearCalculatorViewModel"
             Design.Height="640"
             Design.Width="360">

    <UserControl.Resources>
        <converters:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter" />
        <converters:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter" />
        <converters:EnumEqualsToBooleanConverter x:Key="EnumEqualsToBooleanConverter" />
        <converters:GearIntensityToColorConverter x:Key="GearIntensityToColorConverter" />
        <converters:NotEmptyCollectionToBooleanConverter x:Key="NotEmptyCollectionToBooleanConverter" />
        <converters:UnitDisplayConverter x:Key="UnitDisplayConverter" />
    </UserControl.Resources>

    <StackPanel Margin="20,10" Orientation="Vertical">
        <!--  Calculator Type  -->
        <Grid Grid.Row="0" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*,2*" RowDefinitions="Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.OutputFormat}" />
            <ComboBox Grid.Row="1" Grid.Column="0"
                      Margin="0,0,10,0" HorizontalAlignment="Stretch"
                      ItemsSource="{Binding CalculationTypes}"
                      SelectedItem="{Binding SelectedCalculatorType}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource EnumDisplayNameConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Row="1" Grid.Column="1"
                    HorizontalAlignment="Left" VerticalAlignment="Top"
                    Command="{Binding ShowHelpPageCommand}"
                    Theme="{DynamicResource BorderlessButton}">
                <materialIcons:MaterialIcon Width="20" Height="20"
                                            Foreground="{DynamicResource SemiColorText0}"
                                            Kind="InfoOutline" />
            </Button>
        </Grid>

        <!--  Wheel & Crank &  Input & Cadence  -->
        <Grid Grid.Row="1" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*, 2*" RowDefinitions="Auto, Auto">

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.WheelSize}" />
            <ComboBox Grid.Row="1" Grid.Column="0"
                      Margin="0,0,10,0" HorizontalAlignment="Stretch"
                      ItemsSource="{Binding SourceWheels}"
                      SelectedItem="{Binding SelectedWheel}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Margin="10,0,0,8"
                       IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.GainRatio}}"
                       Text="{x:Static res:Languages.CrankLength}" />
            <ComboBox Grid.Row="1" Grid.Column="1"
                      Margin="10,0,0,0" HorizontalAlignment="Stretch"
                      IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.GainRatio}}"
                      ItemsSource="{Binding SourceCranks}"
                      SelectedItem="{Binding SelectedCrank}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Margin="10,0,0,8"
                       IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.Speed}}"
                       Text="{x:Static res:Languages.Cadence}" />
            <ComboBox Grid.Row="1" Grid.Column="1"
                      Margin="10,0,0,0" HorizontalAlignment="Stretch"
                      IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.Speed}}"
                      ItemsSource="{Binding SourceCadence}"
                      SelectedItem="{Binding SelectedCadence}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>

        <!--  Chainrings Input  -->
        <Grid Grid.Row="2" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*, 2*, 2*" RowDefinitions="Auto, Auto, Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.ChainringTeeth}" />

            <NumericUpDown Grid.Row="1" Grid.Column="0"
                           Margin="0,0,10,0"
                           Increment="1" ShowButtonSpinner="False"
                           Value="{Binding Chainring1TeethCount, Delay=1000}" />

            <NumericUpDown Grid.Row="1" Grid.Column="1"
                           Margin="10,0,10,0"
                           Increment="1" ShowButtonSpinner="False"
                           Value="{Binding Chainring2TeethCount, Delay=1000}" />

            <NumericUpDown Grid.Row="1" Grid.Column="2"
                           Margin="10,0,0,0"
                           Increment="1" ShowButtonSpinner="False"
                           Value="{Binding Chainring3TeethCount, Delay=1000}" />
        </Grid>

        <!--  Sprockets Input  -->
        <Grid Grid.Row="3" Grid.Column="0"
              Margin="0,10,0,20"
              ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.SprocketTeeth}" />
            <ComboBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding SourceSprockets}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Height="35"
                                  Margin="0,-8" HorizontalAlignment="Stretch"
                                  Command="{Binding $parent[UserControl].DataContext.SprocketSelectedCommand}"
                                  CommandParameter="{Binding}"
                                  IsChecked="{Binding IsSelected}">
                            <TextBlock Margin="10,0,0,0" Text="{Binding Value.Label}" />
                        </CheckBox>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.SelectionBoxItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding $parent[UserControl].DataContext.SelectedSprocketsStr}" />
                    </DataTemplate>
                </ComboBox.SelectionBoxItemTemplate>
            </ComboBox>
        </Grid>

        <!--  Result  -->
        <ContentControl Margin="20,10" HorizontalAlignment="Stretch"
                        Content="{Binding CurrentState}">
            <ContentControl.DataTemplates>
                <DataTemplate DataType="enums:ECalculatorState">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Styles>

                            <Style Selector="ContentControl[Content=NotStarted]">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Margin="0,20,0,25" Orientation="Vertical">
                                                <materialIcons:MaterialIcon Width="25" Height="25"
                                                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                            Foreground="{DynamicResource SemiColorTertiary}"
                                                                            Kind="AccountQuestionOutline" />
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Text="{x:Static res:Languages.EnterValues}" />
                                                <TextBlock Margin="0,15,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Foreground="{DynamicResource SemiColorWarning}"
                                                           Text="{Binding $parent[UserControl].DataContext.CalculatorInputErrors}"
                                                           TextWrapping="Wrap" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style Selector="ContentControl[Content=InProgress]">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Margin="0,20,0,25" Orientation="Vertical">
                                                <materialIcons:MaterialIcon Width="25" Height="25"
                                                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                            Foreground="{DynamicResource SemiColorInformation}"
                                                                            Kind="TimerSand" />
                                                <TextBlock Grid.Row="1"
                                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           Text="{x:Static res:Languages.CalculationInProgress}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style Selector="ContentControl[Content=Computed]">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>

                                            <Grid RowDefinitions="Auto, Auto, Auto, Auto">
                                                <StackPanel Grid.Column="0"
                                                            Margin="0,20,0,25"
                                                            Orientation="Vertical">
                                                    <materialIcons:MaterialIcon Width="25" Height="25"
                                                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                Foreground="{DynamicResource SemiColorSuccess}"
                                                                                Kind="CheckBold" />
                                                    <TextBlock Grid.Row="1"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               Text="{x:Static res:Languages.Calculated}" />
                                                </StackPanel>

                                                <Grid Grid.Row="5" Grid.Column="0"
                                                      HorizontalAlignment="Center"
                                                      ColumnDefinitions="Auto" RowDefinitions="Auto, Auto">

                                                    <ComboBox Grid.Row="0" Grid.Column="0"
                                                              HorizontalAlignment="Center"
                                                              IsVisible="{Binding $parent[UserControl].DataContext.AvailableResultUnits, Converter={StaticResource NotEmptyCollectionToBooleanConverter}}"
                                                              ItemsSource="{Binding $parent[UserControl].DataContext.AvailableResultUnits}"
                                                              SelectedItem="{Binding $parent[UserControl].DataContext.SelectedResultUnit}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Converter={StaticResource UnitDisplayConverter}}" />
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>

                                                    <DataGrid Grid.Row="1" Grid.Column="0"
                                                              Margin="0,20,0,0" HorizontalAlignment="Center"
                                                              BorderBrush="Gray" BorderThickness="1" CanUserReorderColumns="False" CanUserResizeColumns="False"
                                                              CanUserSortColumns="False" GridLinesVisibility="All" IsReadOnly="True"
                                                              ItemsSource="{Binding $parent[UserControl].DataContext.GearCalculResultRows}">
                                                        <DataGrid.Styles>
                                                            <Style Selector="DataGridColumnHeader">
                                                                <Setter Property="Foreground" Value="{StaticResource SemiColorTertiary}" />
                                                            </Style>
                                                        </DataGrid.Styles>
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn Binding="{Binding SprocketCount}"
                                                                                Foreground="{StaticResource SemiColorTertiary}"
                                                                                Header="" IsVisible="True" />
                                                            <DataGridTextColumn Binding="{Binding ValueForChainring1}"
                                                                                Header="{Binding $parent[UserControl].DataContext.Chainring1TeethCount}}" IsVisible="True" />
                                                            <DataGridTextColumn Binding="{Binding ValueForChainring2}"
                                                                                Header="{Binding $parent[UserControl].DataContext.Chainring2TeethCount}"
                                                                                IsVisible="{Binding $parent[UserControl].DataContext.Chainring2TeethCount, Converter={StaticResource NotNullToBooleanConverter}}" />
                                                            <DataGridTextColumn Binding="{Binding ValueForChainring3}"
                                                                                Header="{Binding $parent[UserControl].DataContext.Chainring3TeethCount}"
                                                                                IsVisible="{Binding $parent[UserControl].DataContext.Chainring3TeethCount, Converter={StaticResource NotNullToBooleanConverter}}" />
                                                        </DataGrid.Columns>
                                                    </DataGrid>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style Selector="ContentControl[Content=Failed]">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid RowDefinitions="Auto, Auto, Auto, Auto">
                                                <StackPanel Grid.Column="0"
                                                            Margin="0,20,0,25"
                                                            Orientation="Vertical">
                                                    <materialIcons:MaterialIcon Width="25" Height="25"
                                                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                Foreground="{DynamicResource SemiColorDanger}"
                                                                                Kind="ErrorOutline" />
                                                    <TextBlock Grid.Row="1"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               Text="{x:Static res:Languages.CalculationFailed}" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style Selector="ContentControl[Content=Unknown]">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid RowDefinitions="Auto, Auto, Auto, Auto">
                                                <StackPanel Grid.Column="0"
                                                            Margin="0,20,0,25"
                                                            Orientation="Vertical">
                                                    <materialIcons:MaterialIcon Width="25" Height="25"
                                                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                Foreground="{DynamicResource SemiColorWarning}"
                                                                                Kind="CloseCircleOutline" />
                                                    <TextBlock Grid.Row="1"
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               Text="{x:Static res:Languages.SomethingWentWrong}" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ContentControl.Styles>
                    </ContentControl>
                </DataTemplate>
            </ContentControl.DataTemplates>
        </ContentControl>
    </StackPanel>
</UserControl>
