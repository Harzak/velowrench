<UserControl x:Class="velowrench.UI.Views.Tools.GearCalculatorView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:calculatorEnums="using:velowrench.Calculations.Enums"
             xmlns:const="using:velowrench.UI.Constants"
             xmlns:controls="using:velowrench.UI.Controls"
             xmlns:converters="clr-namespace:velowrench.UI.Converters"
             xmlns:enums="using:velowrench.Utils.Enums"
             xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:res="clr-namespace:velowrench.UI.Resources"
             xmlns:vm="using:velowrench.Core.ViewModels"
             x:DataType="vm:Tools.GearCalculatorViewModel"
             Design.Height="640"
             Design.Width="360">

    <UserControl.Resources>
        <converters:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter" />
        <converters:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter" />
        <converters:EnumEqualsToBooleanConverter x:Key="EnumEqualsToBooleanConverter" />
        <converters:GearIntensityToColorConverter x:Key="GearIntensityToColorConverter" />
        <converters:NotEmptyCollectionToBooleanConverter x:Key="NotEmptyCollectionToBooleanConverter" />
        <converters:UnitDisplayConverter x:Key="UnitDisplayConverter" />

        <!--  DataTemplate when calculation is computed  -->
        <DataTemplate x:Key="GearCalculatorComputedContentTemplate" x:DataType="vm:Tools.GearCalculatorViewModel">
            <Grid HorizontalAlignment="Center"
                  ColumnDefinitions="Auto" RowDefinitions="Auto, Auto, Auto, Auto">

                <ComboBox Grid.Row="0" Grid.Column="0"
                          HorizontalAlignment="Center"
                          IsVisible="{Binding AvailableResultUnits, Converter={StaticResource NotEmptyCollectionToBooleanConverter}}"
                          ItemsSource="{Binding AvailableResultUnits}"
                          SelectedItem="{Binding SelectedResultUnit}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource UnitDisplayConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <DataGrid Grid.Row="1" Grid.Column="0"
                          Margin="0,20,0,0" HorizontalAlignment="Center"
                          BorderBrush="Gray" BorderThickness="1" CanUserReorderColumns="False" CanUserResizeColumns="False"
                          CanUserSortColumns="False" GridLinesVisibility="All" IsReadOnly="True"
                          ItemsSource="{Binding GearCalculResultRows}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding SprocketCount}"
                                            Foreground="{StaticResource SemiColorTertiary}"
                                            Header="" IsVisible="True" />
                        <DataGridTextColumn Binding="{Binding ValueForChainring1}"
                                            Header="{Binding $parent[UserControl].DataContext.Chainring1TeethCount}"
                                            IsVisible="True" />
                        <DataGridTextColumn Binding="{Binding ValueForChainring2}"
                                            Header="{Binding $parent[UserControl].DataContext.Chainring2TeethCount}"
                                            IsVisible="{Binding $parent[UserControl].DataContext.Chainring2TeethCount, Converter={StaticResource NotNullToBooleanConverter}}" />
                        <DataGridTextColumn Binding="{Binding ValueForChainring3}"
                                            Header="{Binding $parent[UserControl].DataContext.Chainring3TeethCount}"
                                            IsVisible="{Binding $parent[UserControl].DataContext.Chainring3TeethCount, Converter={StaticResource NotNullToBooleanConverter}}" />
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="2" Grid.Column="0"
                        Margin="0,15" VerticalAlignment="Center"
                        Classes="Tertiary"
                        Command="{Binding CopyResultToClipboardCommand}"
                        Theme="{DynamicResource OutlineButton}">
                    <StackPanel Margin="0,10" Orientation="Horizontal">
                        <materialIcons:MaterialIcon Width="20" Height="20"
                                                    Margin="0,0,10,0"
                                                    Foreground="{DynamicResource SemiColorText0}"
                                                    Kind="ContentCopy" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"
                                   FontWeight="Regular"
                                   Text="{x:Static res:Languages.CopyResultsLabel}" />

                    </StackPanel>
                </Button>
                <TextBlock Grid.Row="3" Grid.Column="0" Margin="0,10,0,0"
                           Classes="Subtitle"
                           Text="{Binding InputSummary}" />
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <StackPanel Margin="20,10" Orientation="Vertical">

        <Border Classes="Group">
            <TextBlock Text="{x:Static res:Languages.GearCalculatorHeader}" TextWrapping="Wrap" />
        </Border>

        <!--  Calculator Type  -->
        <Grid Grid.Row="0" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*,2*" RowDefinitions="Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.OutputFormat}" />
            <ComboBox Grid.Row="1" Grid.Column="0"
                      Margin="0,0,10,0" HorizontalAlignment="Stretch"
                      ItemsSource="{Binding CalculationTypes}"
                      SelectedItem="{Binding SelectedCalculatorType}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource EnumDisplayNameConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Row="1" Grid.Column="1"
                    HorizontalAlignment="Left" VerticalAlignment="Top"
                    Command="{Binding ShowHelpPageCommand}"
                    Theme="{DynamicResource BorderlessButton}">
                <materialIcons:MaterialIcon Width="20" Height="20"
                                            Foreground="{DynamicResource SemiColorText0}"
                                            Kind="InfoOutline" />
            </Button>
        </Grid>

        <!--  Wheel & Crank &  Input & Cadence  -->
        <Grid Grid.Row="1" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*, 2*" RowDefinitions="Auto, Auto">

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.WheelSize}" />
            <ComboBox Grid.Row="1" Grid.Column="0"
                      Margin="0,0,10,0" HorizontalAlignment="Stretch"
                      ItemsSource="{Binding SourceWheels}"
                      SelectedItem="{Binding SelectedWheel}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Margin="10,0,0,8"
                       IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.GainRatio}}"
                       Text="{x:Static res:Languages.CrankLength}" />
            <ComboBox Grid.Row="1" Grid.Column="1"
                      Margin="10,0,0,0" HorizontalAlignment="Stretch"
                      IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.GainRatio}}"
                      ItemsSource="{Binding SourceCranks}"
                      SelectedItem="{Binding SelectedCrank}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Margin="10,0,0,8"
                       IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.Speed}}"
                       Text="{x:Static res:Languages.Cadence}" />
            <ComboBox Grid.Row="1" Grid.Column="1"
                      Margin="10,0,0,0" HorizontalAlignment="Stretch"
                      IsVisible="{Binding SelectedCalculatorType, Converter={StaticResource EnumEqualsToBooleanConverter}, ConverterParameter={x:Static calculatorEnums:EGearCalculatorType.Speed}}"
                      ItemsSource="{Binding SourceCadence}"
                      SelectedItem="{Binding SelectedCadence}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>

        <!--  Chainrings Input  -->
        <Grid Grid.Row="2" Grid.Column="0"
              Margin="0,10,0,10"
              ColumnDefinitions="2*, 2*, 2*" RowDefinitions="Auto, Auto, Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.ChainringTeeth}" />

            <NumericUpDown Grid.Row="1" Grid.Column="0"
                           Margin="0,0,10,0"
                           Minimum="0" ShowButtonSpinner="False"
                           Value="{Binding Chainring1TeethCount, Delay={x:Static const:UIConstants.BINDED_INPUT_DELAY_MS}}" />

            <NumericUpDown Grid.Row="1" Grid.Column="1"
                           Margin="10,0,10,0"
                           Minimum="0" ShowButtonSpinner="False"
                           Value="{Binding Chainring2TeethCount, Delay={x:Static const:UIConstants.BINDED_INPUT_DELAY_MS}}" />

            <NumericUpDown Grid.Row="1" Grid.Column="2"
                           Margin="10,0,0,0"
                           Minimum="0" ShowButtonSpinner="False"
                           Value="{Binding Chainring3TeethCount, Delay={x:Static const:UIConstants.BINDED_INPUT_DELAY_MS}}" />
        </Grid>

        <!--  Sprockets Input  -->
        <Grid Grid.Row="3" Grid.Column="0"
              Margin="0,10,0,20"
              ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto">
            <TextBlock Grid.Row="0" Grid.Column="0"
                       Margin="0,0,0,8"
                       Text="{x:Static res:Languages.SprocketTeeth}" />
            <ComboBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding SourceSprockets}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Height="35"
                                  Margin="0,-8" HorizontalAlignment="Stretch"
                                  Command="{Binding $parent[UserControl].DataContext.SprocketSelectedCommand}"
                                  CommandParameter="{Binding}"
                                  IsChecked="{Binding IsSelected}">
                            <TextBlock Margin="10,0,0,0" Text="{Binding Value.Label}" />
                        </CheckBox>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.SelectionBoxItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding $parent[UserControl].DataContext.SelectedSprocketsStr}" />
                    </DataTemplate>
                </ComboBox.SelectionBoxItemTemplate>
            </ComboBox>
        </Grid>

        <!--  Calculation Status  -->
        <controls:CalculatorStateControl Margin="20,10" HorizontalAlignment="Stretch"
                                         ComputedContentTemplate="{StaticResource GearCalculatorComputedContentTemplate}"
                                         ErrorMessage="{Binding InputErrorMessages}"
                                         State="{Binding CurrentState}" />

    </StackPanel>
</UserControl>
